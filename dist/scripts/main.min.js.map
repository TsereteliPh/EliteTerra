{"version":3,"sources":["header.js","modal.js","lightgallery.js","phoneInput.js","swiper.js","scroll.js"],"names":["header","document","querySelector","burgerBtn","burgerBtnDesc","popup","menu","cloneNode","modal","addEventListener","classList","toggle","append","contains","textContent","lightGallery","getElementById","plugins","lgThumbnail","speed","modalForm","modalInputs","querySelectorAll","modalMessages","modalOpenBtn","modalCloseBtn","modalSubmitBtn","bodyLock","body","style","overflow","bodyUnlock","modalToggler","remove","add","validationFail","forEach","button","elem","borderColor","validationSuccess","modalMessageToggler","input","onchange","value","validity","typeMismatch","patternMismatch","message","phoneInput","evt","preventDefault","checkValidity","display","animate","transform","duration","easing","servicesSwiper","onfocus","link","e","href","this","getAttribute","substring","scrollTarget","elementPosition","getBoundingClientRect","top","window","scrollBy","behavior","innerWidth","Swiper","scrollbar","el","draggable","spaceBetween","navigation","nextEl","prevEl","loop","slidesPerView","breakpoints","320","1920"],"mappings":"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","file":"main.min.js","sourcesContent":["const header = document.querySelector('.header');\nconst burgerBtn = header.querySelector('.header__button');\nconst burgerBtnDesc = header.querySelector('.js-btn-info');\nconst popup = header.querySelector('.header__popup');\nconst menu = header.querySelector('.nav__list').cloneNode(1);\n\nburgerBtn.addEventListener('click', () => {\n    burgerBtn.classList.toggle('header__button--cross');\n    popup.classList.toggle('header__popup--active');\n    popup.append(menu);\n\n    if(popup.classList.contains('header__popup--active')) {\n        burgerBtnDesc.textContent = 'Закрыть меню';\n    } else {\n        burgerBtnDesc.textContent = 'Открыть меню';\n    }\n})\n\n","\nconst modal = document.querySelector('.modal');\nconst modalForm = modal.querySelector('.modal__form');\nconst modalInputs = modal.querySelectorAll('.modal__input');\nconst modalMessages = modal.querySelectorAll('.modal__caption');\nconst modalOpenBtn = document.querySelectorAll('.js-modal-open');\nconst modalCloseBtn = modal.querySelector('.js-modal-close');\nconst modalSubmitBtn = modal.querySelector('.modal__button');\n\n//Функционал открытия-закрытия модального окна\nconst bodyLock = () => {\n    document.body.style.overflow = 'hidden';\n}\n\nconst bodyUnlock = () => {\n    document.body.style.overflow = 'visible';\n}\n\nconst modalToggler = () => {\n    if (modal.classList.contains('modal--active')) {\n        modal.classList.remove('modal--active');\n        bodyUnlock();\n    } else {\n        modal.classList.add('modal--active');\n        bodyLock();\n    }\n}\n\nmodalOpenBtn.forEach(button => {\n    button.addEventListener('click', () => {\n        modalToggler();\n    }) \n});\n\nmodalCloseBtn.addEventListener('click', () => {\n    modalToggler();\n})\n\n//Функционал валидации формы модального окна\n\nconst validationFail = (elem) => {\n    elem.style.borderColor = '#CF0909';\n}\n\nconst validationSuccess = (elem) => {\n    elem.style.borderColor = '#5BA23A';\n}\n\nmodalInputs.forEach(input => {\n    input.onchange = function() {\n        if (input.value !== \"\" && !input.validity.typeMismatch && !input.validity.patternMismatch) {\n            validationSuccess(input);\n        } else {\n            validationFail(input);\n        }\n    }\n});\n\n//Функционал отправки\n\nconst modalMessageToggler = () => {\n    modalMessages.forEach(message => {\n        message.classList.toggle('modal__caption--show');\n    });\n}\n\nmodalSubmitBtn.addEventListener('submit', (evt) => {\n    evt.preventDefault();\n\n    if (modalForm.checkValidity()) {\n        modalMessageToggler();\n        modalForm.style.display = 'none';\n    } else {\n        modalSubmitBtn.animate([\n            {transform: 'translateX(4px)'},\n            {transform: 'translateX(-4px)'},\n            {transform: 'translateX(4px)'},\n            {transform: 'translateX(-4px)'},\n            {transform: 'translateX(4px)'},\n            {transform: 'translateX(0)'}\n          ], {\n            duration: 500,\n            easing: 'ease'\n          })\n    }\n})","lightGallery(document.getElementById('lightgallery'), {\r\n    plugins: [lgThumbnail],\r\n    speed: 500\r\n});","const phoneInput = document.querySelectorAll('.js-phone-input');\nphoneInput.forEach(input => {\n    input.onfocus = () => {\n        if (input.value === '') {\n            input.value = '+';\n        }\n    }\n});","document.addEventListener('DOMContentLoaded', () => {\n    if (window.innerWidth < 744){\n        const processSlider = new Swiper('.process__wrapper', {\n            scrollbar: {\n                el: '.process__scrollbar',\n                draggable: true,\n            },\n            spaceBetween: 20  \n        });\n    }\n})\n\n//Скрипт для блока Проекты (закомментирован)\n// const projectsSwiper = new Swiper('.projects__wrapper', {\n//     navigation: {\n//         nextEl: '.projects__right-btn',\n//         prevEl: '.projects__left-btn',\n//     },\n//     loop: true,\n//     slidesPerView: 'auto',\n//     breakpoints: {\n//         320: {\n//             spaceBetween: 45\n//         },\n//         1920: {\n//             spaceBetween: 60\n//         }\n//     }\n// })\n\nconst servicesSwiper = new Swiper('.services__wrapper', {\n    navigation: {\n        nextEl: '.services__right-btn',\n        prevEl: '.services__left-btn',\n    },\n    loop: false,\n    slidesPerView: 'auto',\n    breakpoints: {\n        320: {\n            spaceBetween: 30\n        },\n        1920: {\n            spaceBetween: 60\n        }\n    }\n})","document.querySelectorAll('a[href^=\"#\"').forEach(link => {\n\n    link.addEventListener('click', function(e) {\n        e.preventDefault();\n\n        let href = this.getAttribute('href').substring(1);\n\n        const scrollTarget = document.getElementById(href);\n\n        const topOffset = 30;\n        const elementPosition = scrollTarget.getBoundingClientRect().top;\n        const offsetPosition = elementPosition - topOffset;\n\n        window.scrollBy({\n            top: offsetPosition,\n            behavior: 'smooth'\n        });\n    });\n});"]}